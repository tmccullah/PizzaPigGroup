import javafx.scene.layout.*;
import javafx.scene.control.Button;
import javafx.scene.text.Font;
import javafx.event.EventHandler;
import javafx.event.ActionEvent;
import javafx.geometry.Insets;
import java.util.ArrayList;

// import JavaFX package with its subpackages and classes & ArrayList class from util package


/******************************************************************************************************

NAME: Tori McCullah

DATE: 09/11/2017

******************************************************************************************************/


public class SizePane extends Pane {

// grid pane will organize buttons in an ordered fashion
   private GridPane grid = new GridPane();
   
   
// create buttons for all the size choices
   private Button small = new Button("small"); 
   private Button medium = new Button("medium"); 
   private Button large = new Button("large"); 
   
   
// create button editing object to manipulate buttons behaviors
   private ButtonManipulation buttonEdit = new ButtonManipulation();
   
   
// create an array that will hold all the buttons
   protected ArrayList<Button> buttonList = new ArrayList<>();

// create an array that will hold the size
   ArrayList<String> sizeType = new ArrayList<>();
   
   
// establish contructor   
   public SizePane() {
   
   // add buttons to button list
      buttonList.add(small);
      buttonList.add(medium);
      buttonList.add(large);
      
   
   // edit all buttons to be styled as formatted in styleManyButtons method
      buttonEdit.styleManyButtons(buttonList);
   
      
   // each button in list passes this method
      for (Button b: buttonList) {
         b.setOnAction( e -> {
            deactivateButtons();
            sizeType.add(b.toString());
         });
      }
      
      
   // add buttons to grid in specified format then add to the pane
      grid.addRow(0, small, medium, large);
      grid.setPadding(new Insets(30, 30, 30, 30));
      grid.setHgap(20);
      getChildren().add(grid);
   }
   
   
   
// getter method for the array toppingsList
   public ArrayList getSizeType() {
      return sizeType;
   }
   
   
   
// to clear toppings list after each pizza is made
   public void resetSizeType() {
      sizeType.clear();
   } 
   
   
   
// method to turn all buttons on
   public void activateButtons() {
      for (Button b: buttonList)
         buttonEdit.turnOn(b);
   }
   


// method to turn all buttons off
   public void deactivateButtons() {
      for (Button b: buttonList) 
         buttonEdit.turnOff(b);
   }
       
}
