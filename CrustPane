import javafx.scene.layout.*;
import javafx.scene.control.TextArea;
import javafx.scene.control.Button;
import javafx.scene.text.Font;
import javafx.event.EventHandler;
import javafx.event.ActionEvent;
import javafx.geometry.Insets;
import java.util.ArrayList;
// import JavaFX package with its subpackages and classes & ArrayList class from util package


/******************************************************************************************************

NAME: Tori McCullah

DATE: 09/11/2017

******************************************************************************************************/


public class CrustPane extends Pane {

// must initialize some text area
   private TextArea textArea;

// grid pane will organize buttons in an ordered fashion
   private GridPane grid = new GridPane();
   
   
// create buttons for all the topping choices
   private Button thin = new Button("thin"); 
   private Button original = new Button("original"); 
   private Button stuffed = new Button("stuffed"); 
   

// create button editing object to manipulate buttons behaviors
   private ButtonManipulation buttonEdit = new ButtonManipulation();
   
   
// create an array that will hold all the buttons
   protected ArrayList<Button> buttonList = new ArrayList<>();
   
   
   
   // establish contructor   
   public CrustPane(TextArea ta) {
   
      textArea = ta;
      buttonEdit.setTextArea(textArea);
   
   // add all buttons to button list
      buttonList.add(thin);
      buttonList.add(original);
      buttonList.add(stuffed);
   
      
   // edit all buttons to be styled as formatted in styleManyButtons method
      buttonEdit.styleManyButtons(buttonList);
   
      
   // each button in list passes this method
      for (Button b: buttonList) {
         b.setOnAction( e -> {
            deactivateButtons();
            String s = buttonEdit.buttonName(b);
            textArea.appendText("\n" + s);
         });
      }
         
         
   // add buttons to grid
      grid.addRow(0, thin, original, stuffed);
      grid.setPadding(new Insets(30, 30, 30, 30));
      grid.setHgap(20);          
      getChildren().add(grid);
   }
   
   
// method to turn all buttons on
   public void activateButtons() {
      for (Button b: buttonList)
         buttonEdit.turnOn(b);
   }
   


// method to turn all buttons off
   public void deactivateButtons() {
      for (Button b: buttonList) 
         buttonEdit.turnOff(b);
   }
     
       
}
